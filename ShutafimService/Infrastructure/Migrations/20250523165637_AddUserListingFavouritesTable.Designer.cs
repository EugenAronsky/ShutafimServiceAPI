// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ShutafimService.Infrastructure.DbContexts;

#nullable disable

namespace ShutafimService.Migrations
{
    [DbContext(typeof(ShutafimDbContext))]
    [Migration("20250523165637_AddUserListingFavouritesTable")]
    partial class AddUserListingFavouritesTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ShutafimService.Domain.Entities.Listing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("AgentsInvolved")
                        .HasColumnType("boolean");

                    b.PrimitiveCollection<List<string>>("Amenities")
                        .HasColumnType("jsonb");

                    b.Property<double>("AreaM2")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("CheckInDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("CheckOutDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ContactMethod")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal?>("Deposit")
                        .HasColumnType("numeric");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("Floor")
                        .HasColumnType("integer");

                    b.Property<bool>("Furnished")
                        .HasColumnType("boolean");

                    b.Property<Dictionary<string, int>>("FurnitureDetails")
                        .HasColumnType("jsonb");

                    b.Property<bool>("Guarantor")
                        .HasColumnType("boolean");

                    b.Property<int?>("Impressions")
                        .HasColumnType("integer");

                    b.Property<double?>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<Guid>("ListedById")
                        .HasColumnType("uuid");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double?>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<int>("NumberOfRooms")
                        .HasColumnType("integer");

                    b.Property<bool?>("OnlineTour")
                        .HasColumnType("boolean");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("PropertyType")
                        .HasColumnType("integer");

                    b.Property<int>("RentalType")
                        .HasColumnType("integer");

                    b.Property<Dictionary<string, int>>("RoomDetails")
                        .HasColumnType("jsonb");

                    b.PrimitiveCollection<List<string>>("RoomsDescription")
                        .HasColumnType("text[]");

                    b.PrimitiveCollection<List<string>>("Rules")
                        .HasColumnType("jsonb");

                    b.Property<int?>("Shelter")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int?>("TotalFloors")
                        .HasColumnType("integer");

                    b.PrimitiveCollection<int[]>("UtilitiesCovered")
                        .HasColumnType("integer[]");

                    b.Property<int?>("Views")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Listings");
                });

            modelBuilder.Entity("ShutafimService.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("text");

                    b.Property<bool>("EmailIsVerified")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<string>("InterfaceLanguage")
                        .HasColumnType("text");

                    b.Property<bool>("IsActiveAccount")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneIsVerified")
                        .HasColumnType("boolean");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Profession")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ShutafimService.Domain.Entities.UserListingFavourite", b =>
                {
                    b.Property<Guid>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<int>("ListingId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ClientId", "ListingId");

                    b.HasIndex("ListingId");

                    b.ToTable("UserListingFavourites");
                });

            modelBuilder.Entity("ShutafimService.Domain.Entities.UserListingFavourite", b =>
                {
                    b.HasOne("ShutafimService.Domain.Entities.Listing", "Listing")
                        .WithMany()
                        .HasForeignKey("ListingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Listing");
                });
#pragma warning restore 612, 618
        }
    }
}
